//The class TicketMachine provides objects that control automated ticket machines. The class has the following methods of relevance to this question:
//• public int getPrice() returns the price of tickets supplied by the machine.
//• public int getTotal() returns the total amount of money received by a machine.
//• public void resetTotal() clears the total amount of money received by a machine.
//You should not write the TicketMachine class.

//The MachineCollection class uses an ArrayList to store TicketMachine objects. The MachineCollection class has the following methods:
//• public void add(TicketMachine tm) stores the given machine to the collection.
//• public int numberOfMachines() returns the number of machines in the collection.
//• public int collectMoney() returns the total amount of money held in all the machines in the collection. 
//In addition, it clears the total stored in each machine. Therefore, once this method has completed, the total in all the machines in the collection would be zero.
//• public int clearMachines(int minimumPrice) removes all machines from the collection whose price is below the minimumPrice parameter. 
//The number of machines removed is returned by the method.

//Write the MachineCollection class in full.

import java.util.ArrayList;
import java.util.Iterator;

public class MachineCollection
{
    private ArrayList<TicketMachine> collection;
    
    /**
    * Constructor for objects of class MachineCollection
    */
    public MachineCollection()
    {
        collection = new ArrayList<TicketMachine>();
    }
    
    /**
    * Stores the given machine to the collection.
    */
    public void add(TicketMachine tm)
    {
        collection.add(tm);
    }
    
    /**
    * Returns the number of machines in the collection.
    */
    public int numberofMachines()
    {
        return collection.size();
    }
      
    /**
    * Returns the total amount of money held in all the machines in the collection. In addition,
    * it clears the total stored in each machine. Therefore, once 
    * this method has completed, the total in all the machines in the collection would be zero.
    */
    public int collectMoney()
    {
        Int sum = 0;
        for (TicketMachine machine : collection) {
            sum += tm.getTotal();
            tm.resetTotal();
        }
        return sum;
    }

    /**
     * Removes all machines from the collection whose price 
     * is below the minimumPrice parameter. The number of 
     * machines removed is returned by the method.
     */
    public int clearMachines(int minimumPrice)
    {
        int count = 0;
        Iterator<TicketMachine> it = collection.iterator();
        while(it.hasNext()) {
            TicketMachine tm = it.next();
            if (tm.getPrice() < minimumPrice) {
                it.remove();
                count++;
            }
        }
        return count;
    }    
}
